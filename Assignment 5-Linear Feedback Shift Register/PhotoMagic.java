
/*************************************************************************
 * Name         : Murray Lynch
 * NetID        : mdlynch
 * Precept      : P04
 *
 * Dependencies : LFSR.java, Color.java
 * Description  : Implements enrcyption and decryption of user-provided images
 *                by xor-ing pseudo-random values generated by a linear feedback
 *                shift register, the seed of which is provided by the user as a 
 *                string of binary values. The tap for the LFSR is also 
 *                user-provided to form a password. The reversal of this method
 *                decrypts an encrypted image provided the password is the same
 *                as given for the encryption process.
 * 
 *************************************************************************/

import java.awt.Color; 

public class PhotoMagic 
{
    // return a transformed copy of picture using lfsr
    public static Picture transform(Picture picture, LFSR lfsr)
    {
        // create blank picture on which transformed image will be formed
        int width = picture.width();
        int height = picture.height();
        Picture transPic = new Picture(width, height);
           
        // for each pixel, in column major order, transform color using
        // linear feedback shift register
        for (int x = 0; x < width; x++)
        {
            for (int y = 0; y < height; y++)
            {
                // create new color from current pixel of source picture 
                Color color = picture.get(x, y);  
                
                // separate RGB colors
                int red = color.getRed();
                int green = color.getGreen();
                int blue = color.getBlue();
                
                // calculate new RGB colors using 8-bit integer from LSFR
                red = red ^ lfsr.generate(8);
                green = green ^ lfsr.generate(8);
                blue = blue ^ lfsr.generate(8);
                
                // create new color from calculated RGB values
                Color transColor = new Color(red, green, blue);
                
                // set current pixel on new picture to transformed color
                transPic.set(x, y, transColor);
                
                
            }
        }
        
        return transPic;

    }
    
    // read in the filename of a picture and the description of an
    // LFSR from the command line and display an encrypted copy of 
    // the picture.  Use the LFSR to do the encryption.
    public static void main(String[] args)  
    {   
        // create new picture from filename given in argument
        Picture source = new Picture(args[0]);
        
        // create new linear feedback shift register from binary password
        // and tap number, both given in command line arguments
        LFSR lfsr = new LFSR(args[1], Integer.parseInt(args[2]));
        
        // create new picture from return value of transform method
        Picture target = transform(source, lfsr);
        
        // display transformed image
        target.show();
    }
}